good_night:
  alias: Buenas noches
#  id: good_night
  sequence:
    - alias: Apagado de TV, Ambilight, Cocina, Estudio, Calefactor e impresora
      service: switch.turn_off
#      entity_id: switch.kodi_tv_salon,switch.toggle_kodi_ambilight,switch.caldera,switch.altavoz,switch.cocina,switch.calefactor,switch.estudio_light_relay,switch.impresora
#      entity_id: switch.kodi_tv_salon,switch.toggle_kodi_ambilight,switch.cocina
      entity_id: switch.kodi_tv_salon,switch.tv_power,switch.bomba_circ_acs,switch.calentador

#    - alias: Bajada de persianas
#      service: cover.close_cover
#      entity_id: cover.sonoff_cover_ventanal,cover.sonoff_cover_puerta_terraza

    - alias: Encendido de CAM Salón
      service: switch.turn_on
      entity_id: switch.camara
    - alias: Notificación de buenas noches
      service: telegram_bot.send_message
      data_template:
        title: '*¡Buenas noches!*'
        target: '{{ states.sensor.telegram_default_chatid.state | int }}'
        message: 'Script de buenas noches *auto-activado*. Apagado de luces, interruptores y bajada de persianas.'
        disable_notification: true
    - alias: Apagado de luces
      service: light.turn_off
    - delay:
        seconds: 10
    - alias: Apagado total de TV y Home cinema
      service: switch.turn_off
      entity_id: switch.tv_power

good_morning:
  alias: Buenos días
#  id: good_morning
  sequence:
    - alias: Subida de persianas
      service: cover.open_cover
      entity_id: cover.sonoff_cover_ventanal,cover.sonoff_cover_puerta_terraza

    - alias: Notificación de buenos días
      service: telegram_bot.send_message
      data_template:
        title: '*¡Buenos días!*'
        target: '{{ states.sensor.telegram_default_chatid.state | int }}'
        message: 'Script de buenos días *auto-activado*: Subida de persianas'
        disable_notification: true

play_kodi_pvr:
#  id: play_kodi_pvr
  alias: Enciende la caja tonta
  sequence:
      service: python_script.start_kodi_play_tv
#    - alias: TV on
#      service: media_player.turn_on
#      data:
#        entity_id: media_player.kodi
#
#    - alias: Play TV channel
#      service: media_player.play_media
#      data_template:
#        entity_id: media_player.kodi
#        #      The type of the content to play. Must be one of MUSIC, TVSHOW, VIDEO, EPISODE, CHANNEL or PLAYLIST
#        # [('La 1 HD', 32), ('La 2', 10), ('Antena 3 HD', 33), ('Cuatro HD', 42), ('Telecinco HD', 44), ('La Sexta HD', 18),
#        #  ('#0 HD', 55), ('TV Mediterráneo ', 29), ('TV3 HD ', 52), ('FDF', 17), ('Neox', 6), ('Atreseries HD', 8), ('Energy', 41),
#        #  ('Ten', 4), ('Paramount Channel', 7), ('DEPORTES HD', 34), ('Teledeporte', 31), ('Teledeporte HD', 57), ('Discovery Max', 58),
#        #  ('DKISS ', 49), ('Divinity', 19), ('Nova', 43), ('MEGA', 39), ('Disney Channel HD', 16), ('Boing', 9), ('Clan TVE', 2),
#        #  ('24 Horas', 20), ('Xarxa Televisions ', 5), ('Movistar+ HD', 1)]
#        media_content_type: "CHANNEL"
#        media_content_id: >
#          {% if (now().hour < 14) or ((now().hour == 14) and (now().minute < 50)) %}
#            18
#          {% elif (now().hour < 16) %}
#            33
#          {% elif (now().hour < 20) %}
#            20
#          {% elif (now().hour == 20) and (now().minute < 50) %}
#            18
#          {% elif (now().hour == 20) or ((now().hour == 21) and (now().minute < 15)) %}
#            33
#          {% else %}
#            55
#          {% endif %}
#
#    - alias: Notificación de selección de canal
#      service: telegram_bot.send_message
#      data_template:
#        title: '*TV PVR ON*'
#        target: '{{ states.sensor.telegram_default_chatid.state | int }}'
#        disable_notification: true
#        message: >
#          Encendido de caja tonta en canal '{% if (now().hour < 14) or ((now().hour == 14) and (now().minute < 50)) %}laSexta HD{% elif (now().hour < 16) %}antena3 HD{% elif (now().hour < 20) %}24h{% elif (now().hour == 20) and (now().minute < 50) %}laSexta HD{% elif (now().hour == 20) or ((now().hour == 21) and (now().minute < 15)) %}antena3 HD{% else %}#0 HD{% endif %}'.
#        inline_keyboard:
#          - OFF:/service_call media_player.turn_off media_player.kodi, ON:/service_call media_player.turn_on media_player.kodi, ‖:/service_call media_player.media_play_pause media_player.kodi, ◼︎:/service_call media_player.media_stop media_player.kodi

restart_kodi_osmc:
#  id: restart_kodi
  alias: Restart KODI
  sequence:
    - service: notify.ios_iphone
      data:
        title: 'Reiniciando KODI OSMC'
        message: "KODI debería 'morir' y 'resucitar' en unos segundos"
        data:
          push:
            category: "CONFIRM"
    - service: telegram_bot.send_message
      data_template:
        title: 'Reiniciando KODI OSMC'
        target: '{{ states.sensor.telegram_default_chatid.state | int }}'
        message: "KODI debería 'morir' y 'resucitar' en unos segundos"
        disable_notification: true
    - service: shell_command.cmd_kill_kodi

stop_kodi:
#  id: stop_kodi
  alias: Stop playback in Kodi
  sequence:
      service: media_player.media_stop
      data:
        entity_id: media_player.kodi

quit_kodi:
#  id: quit_kodi
  alias: Quit Kodi
  sequence:
    service: media_player.kodi_call_method
    data:
      method: Application.Quit

update_library:
  alias: Update Kodi Library
  sequence:
    - alias: Call Kodi update
      service: media_player.kodi_call_method
      data:
        entity_id: media_player.kodi
        method: VideoLibrary.Scan

recent_movies:
  alias: Últimas películas
  sequence:
    - alias: Call Kodi serv
      service: media_player.kodi_call_method
      data:
        entity_id: media_player.kodi
        method: VideoLibrary.GetRecentlyAddedMovies
        properties:
          - title
          - year
          - file
          - lastplayed

recent_episodes:
  alias: Últimos episodios
  sequence:
    - alias: Call Kodi serv
      service: media_player.kodi_call_method
      data:
        entity_id: media_player.kodi
        method: VideoLibrary.GetRecentlyAddedEpisodes
        properties:
          - showtitle
          - file
          - lastplayed
          - dateadded
          - firstaired

pvr_recordings:
  alias: Últimas grabaciones de TV
  sequence:
    - alias: Call Kodi API
      service: media_player.kodi_call_method
      data:
        entity_id: media_player.kodi
        method: PVR.GetRecordings
        properties:
          - title
          - starttime
          - file

pvr_channels:
  alias: Canales de TV
  sequence:
    - alias: Call Kodi serv
      service: media_player.kodi_call_method
      data:
        entity_id: media_player.kodi
        method: PVR.GetChannels
        channelgroupid: 1

set_mid_position_cover_1:
  alias: Ventanal está en 50
  sequence:
    - service: cover.set_actual_position
      data:
        entity_id: "cover.sonoff_cover_ventanal"
        position: 50

set_mid_position_cover_2:
  alias: Puerta está en 50
  sequence:
    - service: cover.set_actual_position
      data:
        entity_id: "cover.sonoff_cover_puerta_terraza"
        position: 50

# Sonoff script to request initial state in HA start
start_status_sonoff_outlets:
  alias: Requerir estado de Sonoff
  sequence:
    - service: mqtt.publish
      data:
        topic: "sonoff/4cover"
        payload: "stat"
        qos: 1
#      - service: mqtt.publish
#        data:
#          topic: "sonoff/dual1"
#          payload: "stat"
#          qos: 1
    - service: mqtt.publish
      data:
        topic: "sonoff/pow/1"
        payload: "stat"
        qos: 1
    - service: mqtt.publish
      data:
        topic: "sonoff/simple1"
        payload: "stat"
        qos: 1
