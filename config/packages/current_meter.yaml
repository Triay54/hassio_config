###############################################################################
# enerPI current meter
###############################################################################
homeassistant:
  customize:
    sensor.elecprice_range:
      icon: mdi:currency-eur
    sensor.esp32ener_consumption_day:
      icon: mdi:flash-outline
    sensor.esp32ener_power:
      icon: mdi:flash
      friendly_name: Consumo medido
    sensor.esp32ener_ch1:
      icon: mdi:power-plug
      friendly_name: Circuito 1 (general)
    sensor.esp32ener_ch2:
      icon: mdi:flash-circle
      friendly_name: Circuito 2 (termo,AC,domótica)

    binary_sensor.esp32_ener_online:
      friendly_name: Current Meter Online
#    input_number.enerpi_max_power:
#      friendly_name: Max (kW)
#      icon: mdi:flash-red-eye
#    input_number.enerpi_max_power_reset:
#      friendly_name: Reset at (kW)
#      icon: mdi:flash-off

#input_number:
#  # enerPI alarm config
#  enerpi_max_power:
#    initial: 5.0
#    min: 2.0
#    max: 6.0
#    step: 0.25
#
#  enerpi_max_power_reset:
#    initial: 2.5
#    min: 2.0
#    max: 6.0
#    step: 0.25

binary_sensor:
  - platform: mqtt
    device_class: connectivity
    state_topic: !secret mqtt_topic_esp32_ener_lwt
    name: esp32_Ener Online
    qos: !secret mqtt_default_qos
    payload_on: "online"
    payload_off: "offline"

  - platform: template
    sensors:
      electricity_high_cost_interval:
        friendly_name: "Electricidad: Periodo punta"
        device_class: power
        value_template: >-
          {{ (utcnow().hour >= 11) and (utcnow().hour < 21) }}
        entity_id:
          - sensor.date_time

sensor:
  # OLD one in use to collect both for some time (data regression exercises)
  - platform: mqtt
    state_topic: !secret mqtt_topic_esp32_ener_stream
    value_template: "{{ value_json.rms[2] | float | round }}"
    name: esp32ener_power
    unit_of_measurement: "W"
    json_attributes_topic: !secret mqtt_topic_esp32_ener_stream
    force_update: true
  - platform: mqtt
    state_topic: !secret mqtt_topic_esp32_ener_stream
    value_template: "{{ value_json.rms[0]  | float | round }}"
    name: esp32ener_ch1
    unit_of_measurement: "W"
    force_update: true
  - platform: mqtt
    state_topic: !secret mqtt_topic_esp32_ener_stream
    value_template: "{{ value_json.rms[1]  | float | round }}"
    name: esp32ener_ch2
    unit_of_measurement: "W"
    force_update: true

  - platform: mqtt
    name: "main_voltage"
    state_topic: "shellies/shellyem/emeter/0/voltage"
    value_template: "{%if value %}{{ value | float | round(1) }}{% else %}unknown{% endif %}"
    qos: 1
    unit_of_measurement: "V"
    force_update: true
    icon: mdi:current-ac

  - platform: mqtt
    name: "main_power_ch1"
    state_topic: "shellies/shellyem/emeter/0/power"
    value_template: "{%if value %}{{ value | float | round(0) }}{% else %}unknown{% endif %}"
    qos: 1
    unit_of_measurement: "W"
    force_update: true
    icon: mdi:flash-outline

  - platform: mqtt
    name: "main_power_react_ch1"
    state_topic: "shellies/shellyem/emeter/0/reactive_power"
    value_template: "{%if value %}{{ value | float | round(0) }}{% else %}unknown{% endif %}"
    qos: 1
    unit_of_measurement: "VA"
    force_update: true
    icon: mdi:transmission-tower

  - platform: mqtt
    name: "main_energy_ch1"
    state_topic: "shellies/shellyem/emeter/0/energy"
#    value_template: "{{ value | float / 60000 }}" # Fix for Watt-minutes
    value_template: "{%if value %}{{ value | int }}{% else %}unknown{% endif %}" # Watt-minutes
    qos: 1
    unit_of_measurement: "Wm"
    force_update: true
    icon: mdi:chart-bar

  - platform: mqtt
    name: "main_energy_total_ch1"
    state_topic: "shellies/shellyem/emeter/0/total"
    value_template: "{%if value %}{{ (value | float / 1000) | round(3) }}{% else %}unknown{% endif %}"
    qos: 1
    unit_of_measurement: "kWh"
    force_update: true
    icon: mdi:chart-bar

  - platform: mqtt
    name: "main_power_ch2"
    state_topic: "shellies/shellyem/emeter/1/power"
    value_template: "{%if value %}{{ value | float | round(0) }}{% else %}unknown{% endif %}"
    qos: 1
    unit_of_measurement: "W"
    force_update: true
    icon: mdi:flash-circle

  - platform: mqtt
    name: "main_power_react_ch2"
    state_topic: "shellies/shellyem/emeter/1/reactive_power"
    value_template: "{%if value %}{{ value | float | round(0) }}{% else %}unknown{% endif %}"
    qos: 1
    unit_of_measurement: "VA"
    force_update: true
    icon: mdi:transmission-tower

  - platform: mqtt
    name: "main_energy_ch2"
    state_topic: "shellies/shellyem/emeter/1/energy"
#    value_template: "{{ value | float / 60000 }}" # Fix for Watt-minutes
    value_template: "{%if value %}{{ value | int }}{% else %}unknown{% endif %}" # Watt-minutes
    qos: 1
    unit_of_measurement: "Wm"
    force_update: true
    icon: mdi:chart-bar

  - platform: mqtt
    name: "main_energy_total_ch2"
    state_topic: "shellies/shellyem/emeter/1/total"
    value_template: "{%if value %}{{ (value | float / 1000) | round(3) }}{% else %}unknown{% endif %}"
    qos: 1
    unit_of_measurement: "kWh"
    force_update: true
    icon: mdi:chart-bar

  - platform: template
    sensors:
      main_power_total:
        friendly_name: "Potencia total"
        unit_of_measurement: 'W'
        value_template: "{% if (states.sensor.main_power_ch1.state != 'unknown') and (states.sensor.main_power_ch2.state != 'unknown') %}{{ ((states.sensor.main_power_ch1.state | float) + (states.sensor.main_power_ch2.state | float)) | round() }}{% else %}unknown{% endif %}"
        entity_id:
          - sensor.main_power_ch1
          - sensor.main_power_ch2

      main_energy_total:
        friendly_name: "Consumo total"
        unit_of_measurement: 'kWh'
        value_template: "{% if (states.sensor.main_energy_total_ch1.state != 'unknown') and (states.sensor.main_energy_total_ch2.state != 'unknown') %}{{ ((states.sensor.main_energy_total_ch1.state | float) + (states.sensor.main_energy_total_ch2.state | float)) | round(3) }}{% else %}unknown{% endif %}"
        entity_id:
          - sensor.main_energy_total_ch1
          - sensor.main_energy_total_ch2

      energy_cost_hour:
        friendly_name: "Gasto en energía (current hour)"
        unit_of_measurement: '€'
        value_template: "{%if states.sensor.pvpc.state %}{{ ((states.sensor.hourly_energy_consumption_unique.state | float) * (states.sensor.pvpc.state | float)) | round(5) }}{% else %}unknown{% endif %}"
        entity_id:
          - sensor.hourly_energy_consumption_unique
          - sensor.pvpc

      elecprice_range:
        friendly_name: "Precio luz"
        value_template: "{%if states.sensor.pvpc.state %}{% set price = 100 * (states.sensor.pvpc.state | float) %}{% if price > 15 %}Muy cara{% elif price > 12 %}Cara{% elif price > 8 %}Normal{% elif price > 4 %}Barata{% else %}Muy barata{% endif %}{% else %}unknown{% endif %}"
        entity_id: sensor.pvpc
#      esp32ener_real_power:
#        friendly_name: "Potencia real"
#        unit_of_measurement: 'W'
#        # -367.9333 + [ 1.79581719  1.65896788 -0.65356452] * X
#        value_template: "{{ (-367.9333 + 1.79581719 * (states.sensor.esp32ener_ch1.state | float) + 1.65896788 * (states.sensor.esp32ener_ch2.state | float) - 0.65356452 * (states.sensor.esp32ener_power.state | float ))| round(2) }}"
#        entity_id:
#          - sensor.esp32ener_ch1
#          - sensor.esp32ener_ch2
#          - sensor.esp32ener_power

  - platform: elecprice_spain_pvpc
    electric_rate: discriminacion
    timeout: 20
