# Conectivity sensors:
homeassistant:
  customize:
    sensor.ip_externa:
      friendly_name: IP externa
      icon: mdi:map-marker
    binary_sensor.internet_online:
      friendly_name: ¿Hay conexión a internet?

binary_sensor:
  - platform: mqtt
    state_topic: "hass/status_bedroom"
    name: Dormitorio Online (RPI2)
    device_class: connectivity
    payload_on: "on"
    payload_off: "off"
    qos: 2

#  - platform: mqtt
#    state_topic: "hass/status_office"
#    name: Estudio Online
#    device_class: connectivity
#    payload_on: "on"
#    payload_off: "off"
#    qos: 2

  - platform: command_line
    name: Internet Online
    command: ping -W 1 -c 1 8.8.8.8 > /dev/null 2>&1 && echo success || echo fail
    device_class: connectivity
    payload_on: "success"
    payload_off: "fail"
    scan_interval: 180

  - platform: command_line
    name: Router ON
    command: ping -W 1 -c 1 192.168.1.1 > /dev/null 2>&1 && echo success || echo fail
    device_class: connectivity
    payload_on: "success"
    payload_off: "fail"
    scan_interval: 300

#  - platform: command_line
#    name: Pushbullet Online
#    command: "bash /config/shell/check_notifiers.sh pushbullet"
#    device_class: connectivity
#    payload_on: "success"
#    payload_off: "fail"
#    scan_interval: 240

#  - platform: command_line
#    name: Email Online
#    command: "bash /config/shell/check_notifiers.sh richsmtp"
#    device_class: connectivity
#    payload_on: "success"
#    payload_off: "fail"
#    scan_interval: 240

#  - platform: command_line
#    name: Telegram Online
#    command: "bash /config/shell/check_notifiers.sh telegram"
#    device_class: connectivity
#    payload_on: "success"
#    payload_off: "fail"
#    scan_interval: 240
#
#  - platform: command_line
#    name: iOS Online
#    command: "bash /config/shell/check_notifiers.sh ios"
#    device_class: connectivity
#    payload_on: "success"
#    payload_off: "fail"
#    scan_interval: 240

#  - platform: command_line
#    name: Kodi Online
#    command: "bash /config/shell/check_notifiers.sh kodi"
#    device_class: connectivity
#    payload_on: "success"
#    payload_off: "fail"
#    scan_interval: 240

#  - platform: command_line
#    name: Database OK
#    command: "bash /config/shell/check_notifiers.sh recorder"
#    device_class: connectivity
#    payload_on: "success"
#    payload_off: "fail"
#    scan_interval: 180

  - platform: template
    sensors:
      services_notok:
        friendly_name: Problemas
        device_class: safety
        value_template: >
          {{
           (states.binary_sensor.router_on.state == 'off') or
           (states.binary_sensor.internet_online.state == 'off') or
           (states.sensor.ip_externa.state == 'unknown')
           }}
        entity_id:
          - binary_sensor.router_on
          - binary_sensor.internet_online
          - sensor.ip_externa

sensor:
#- platform: command_line
#  name: CORE Error counter
#  command: "bash /config/shell/check_notifiers.sh"
#
#- platform: command_line
#  name: Error counter (notifiers)
#  command: "bash /config/shell/check_notifiers.sh"
#
#- platform: command_line
#  name: Warning counter (core)
#  command: "bash /config/shell/check_notifiers.sh core_warning"

#- platform: command_line
#  name: IP externa
#  command: "cat /config/external_ip.txt"
- platform: rest
  resource: http://ip.jsontest.com
  name: IP Externa
  value_template: '{% if value_json %}{{ value_json.ip }}{% else %}{{ states.sensor.ip_externa.state}}{% endif %}'
  scan_interval: 300

- platform: cert_expiry
  host: !secret base_host
  scan_interval: 7200
#    port: 443

- platform: uptime
  unit_of_measurement: hours

- platform: pi_hole
  host: !secret pihole_host
  monitored_conditions:
    - dns_queries_today
    - ads_blocked_today
    - ads_percentage_today
    - unique_clients
    - unique_domains
#    - domains_being_blocked
  scan_interval: 180

no_ip:
  domain: !secret base_host
  username: !secret no_ip_user
  password: !secret no_ip_password

# TODO AUTOMATION FOR CERT RENEW?
